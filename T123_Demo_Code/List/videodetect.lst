C51 COMPILER V7.50   VIDEODETECT                                                           06/16/2017 08:24:41 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE VIDEODETECT
OBJECT MODULE PLACED IN .\Object\videodetect.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\tw_lib\drivers\videodetect.c LARGE OMF2 BROWSE INCDIR(.\IncludeFile;..\t
                    -w_lib\sys;..\tw_lib\drivers) DEFINE(T123AI) DEBUG PRINT(.\List\videodetect.lst) TABS(2) OBJECT(.\Object\videodetect.obj)

line level    source

   1          /**
   2           *  @file   videodetect.c
   3           *  @brief  Video Detect Driver
   4           *  $Id: videodetect.c,v 1.13 2013/08/27 02:15:40 onejoe Exp $
   5           *  $Author: onejoe $
   6           *  $Revision: 1.13 $
   7           *
   8           *  Copyright (c) 2011 Terawins Inc. All rights reserved.
   9           * 
  10           *  @date   2011/08/12  ken   New file.
  11           *
  12           */
  13          
  14          #include <reg51.h>
  15          #include <stdlib.h>
  16          
  17          #include "sys.h"
  18          #include "iccontrol.h"
  19          #include "reg_tw.h"
  20          #include "panel.h"
  21          #include "videodetect.h" 
  22          #include "cq.h"
  23          #include "video.h"
  24          #ifdef CCIR656_DETECT
              #include "ccir656detect.h"
              #endif
  27          
  28          #ifdef VGA_DETECT
                  #include "VGAdetect.h"
              #else
  31              extern void Sync_Mode_Detect(void);
  32          #endif
  33          
  34          #define VD_Status_P2      0x3a
  35          #define VSYNC_PeriodH_P0    0x5b
  36          #define HSYNC_PeriodH_P0        0x59
  37          #define VSYNC_PeriodL_P0    0x5a
  38          
  39          #define BULE_BACKGROUND       0x1D, 0xF0, 0x6C
  40          #define BLACK_BACKGROUND  0x10, 0xf0, 0x80
  41          #define BACKGROUND    BLACK_BACKGROUND
  42          
  43          unsigned char Signalset_times = 0;
  44          SigState sigstate;
  45          unsigned short code *VIDEODET_CVD_TAB;
  46          unsigned short code *VIDEODET_YUV_TAB;
  47          unsigned short code *VIDEODET_VGA_TAB;
  48          unsigned short code *VIDEODET_VIP_TAB;//数字信号
  49          static unsigned char ASigStd;
  50          static unsigned char DSigStd;
  51          static unsigned char VSigStd;
  52          static unsigned char Pb;
  53          static unsigned char Pr;
  54          static unsigned char YPbPrBalance;
C51 COMPILER V7.50   VIDEODETECT                                                           06/16/2017 08:24:41 PAGE 2   

  55          static unsigned char AUTO_DETECT=1;
  56          
  57          /*
  58           * 摘要 :static unsigned short GetVTotal(unsigned char mode)
  59           *
  60           * 描述 :取得vsync total lines
  61           *
  62           * 参数 :unsigned char mode =>　mode =0 直接从　5a 5b计算, mode = 1 根据 vsync total xclk * 32 /hsync xclk
             -计算
  63           *
  64           * 回传值 : 回传所计算的　1 vsync total lines
  65           *
  66           * 注意 : 无
  67          */
  68          static unsigned short GetVTotal(unsigned char mode)
  69          {
  70   1        unsigned short wTemp=1000;
  71   1        unsigned short wpreTemp=0;
  72   1        unsigned short VSyncCount=0;
  73   1        unsigned long dwVSyncCount=0; 
  74   1        unsigned short HSyncCount=0;
  75   1        int i;
  76   1      
  77   1          if(mode == 0)
  78   1          {
  79   2            wTemp=0;
  80   2            for(i=0; i<10; i++)
  81   2            {  
  82   3              twdDelay(50);
  83   3            wTemp = IC_ReadByte(TWIC_P0,0x5B);
  84   3              wTemp<<=8;
  85   3                wTemp|= IC_ReadByte(TWIC_P0,0x5A);
  86   3              if((wTemp<=wpreTemp+1)&&(wTemp>=wpreTemp-1))
  87   3              {
  88   4                VSyncCount++;
  89   4                if(VSyncCount>=5)
  90   4                  break;
  91   4              }
  92   3              else
  93   3              {
  94   4                wpreTemp = wTemp;
  95   4                VSyncCount = 0;
  96   4              }
  97   3            }
  98   2            return wpreTemp;
  99   2          }
 100   1        else
 101   1        {
 102   2          wTemp = IC_ReadByte(TWIC_P0,0x50);
 103   2            IC_WritByte(TWIC_P0, 0x50, wTemp | 0x50);//Enable VSYNC counter & Hsync period
 104   2            wTemp = 50;
 105   2            while(wTemp--)
 106   2            {
 107   3              twdDelay(30);
 108   3               //V sync counter is done exit
 109   3              if(IC_ReadByte(TWIC_P0,0x50)&0x20)  //V sync counter is done exit
 110   3            break;
 111   3            }
 112   2          if (wTemp == 0)
 113   2            return 0;
 114   2        
 115   2          wTemp = IC_ReadByte(TWIC_P0,0x50);
C51 COMPILER V7.50   VIDEODETECT                                                           06/16/2017 08:24:41 PAGE 3   

 116   2            wTemp &= 0xCF;      //Disable Auto Position
 117   2            IC_WritByte(TWIC_P0, 0x50, wTemp);
 118   2          dwVSyncCount =  IC_ReadByte(TWIC_P0,0x53);
 119   2            dwVSyncCount <<= 8;
 120   2          dwVSyncCount |= IC_ReadByte(TWIC_P0,0x52);
 121   2            dwVSyncCount <<= 8;
 122   2          dwVSyncCount |= IC_ReadByte(TWIC_P0,0x51);
 123   2            wTemp=0;
 124   2        
 125   2            for(i=0; i<10; i++)
 126   2            { 
 127   3            twdDelay(50);
 128   3            HSyncCount = IC_ReadByte(TWIC_P0,0x59);
 129   3              HSyncCount <<= 8;
 130   3            HSyncCount += IC_ReadByte(TWIC_P0,0x58);
 131   3              if((wTemp&0xFF00)==((HSyncCount)&0xFF00))
 132   3                break;
 133   3              else
 134   3                wTemp = HSyncCount;
 135   3            }
 136   2            wTemp = dwVSyncCount * 32  / (HSyncCount);
 137   2            //dbg(("YPbPr Active signal std is 0x%bx!", (unsigned short)wTemp) );
 138   2            return wTemp;
 139   2        }
 140   1      } 
 141          
 142          /*
 143           * 摘要 :unsigned char DataInRage(unsigned short sData, unsigned short tData, unsigned char rData)
 144           *
 145           * 描述 :确认是否在范围内,一般用来计算vsync hsync跟标准讯号比较,是否在误差内
 146           *
 147           * 参数 :unsigned short sData (比较的参数一) 计算所得
 148           *       unsigned short tData (比较的参数二) 标准数字
 149           *       unsigned char rData  (所允许的误差值)
 150           *
 151           * 回传值 :　1: 在范围内　0:在范围外
 152           *
 153           * 注意 : 无
 154          */
 155          unsigned char DataInRage(unsigned short sData, unsigned short tData, unsigned char rData)
 156          {
 157   1        if((sData<(tData+rData))&&(sData>(tData-rData)))
 158   1          return 1;
 159   1        else
 160   1          return 0;
 161   1      }
 162          
 163          /*
 164           * 摘要 :void  GainSignal(void)
 165           *
 166           * 描述 :影像讯号处理程序
 167           *
 168           * 参数 :无
 169           *
 170           * 回传值 :无
 171           *
 172           * 注意 : 无
 173          */
 174          void  GainSignal(void)
 175          { 
 176   1          unsigned short regTEMP;
 177   1        unsigned char temp_freerun=0;
C51 COMPILER V7.50   VIDEODETECT                                                           06/16/2017 08:24:41 PAGE 4   

 178   1        unsigned char temp_mode=0;
 179   1        unsigned char temp=0;
 180   1        unsigned char temp_status=0;
 181   1        unsigned char temp_syncchange=0;
 182   1        unsigned char tmpSync;
 183   1      
 184   1        //DBG_PRINT("\r  GAIN SIGNAL\n\r");
 185   1          temp_freerun = IC_ReadByte(TWIC_P0,0x50)&0x04;
 186   1        if (sigstate.SigSrc == Src_NONE)
 187   1          return;
 188   1        if (sigstate.SigSrc == Src_CVD)
 189   1        {
 190   2        
 191   2            /*use freerun(P2_50[2] ) and P2_3A[0] to check signal loss */
 192   2          if((IC_ReadByte(TWIC_P2,VD_Status_P2)&0x07 !=0x06))     
 193   2          {
 194   3            sigstate.SigActive = Signal_Lost; 
 195   3            sigstate.DeteSignalType =sigLoss;
 196   3            sigstate.DeteSignalTimes =0;
 197   3        
 198   3            //DBG_PRINT("\rvd status=%bx   temp_freerun=%bx\n\r",IC_ReadByte(TWIC_P2,VD_Status_P2)&0x07,temp_freeru
             -n);
 199   3            /*Blabk screen or open panel => close blue panel */
 200   3            //DBG_PRINT("\r temp_freerun close panel BLACK 1!!!\n\r");
 201   3              if((IC_ReadByte(TWIC_P0,0x91)&0x80) )
 202   3                {
 203   4               sigstate.SigStd=CVBS_UNKNOW;
 204   4                   /*blue screen*/
 205   4               ClosePanel(BLACK_BACKGROUND);
 206   4               //DBG_PRINT("\r  close panel BLUE  !!!\n\r");
 207   4            }
 208   3            return;
 209   3            }   
 210   2          
 211   2      
 212   2      #ifdef TwoSignalSystemMode
 213   2          /* CVD HAVE SINGAL */
 214   2          regTEMP = IC_ReadByte(TWIC_P0, VSYNC_PeriodH_P0);
 215   2          regTEMP<<=8;
 216   2          regTEMP |= IC_ReadByte(TWIC_P0, VSYNC_PeriodL_P0);
 217   2          if(regTEMP > 0x180)
 218   2          regTEMP /=2;
 219   2          
 220   2          if(DataInRage(regTEMP, 0x0107, 7))  //ntsc      
 221   2              temp =NTSC_M;
 222   2          else if(DataInRage(regTEMP, 0x0139, 7)) //pal   
 223   2            temp =PAL_B; 
 224   2        
 225   2            /*check standard stable*/
 226   2            if((sigstate.DeteSignalTimes ==0) || (sigstate.DeteSignalType1 == temp))
 227   2            {   
 228   3              if (temp == PAL_B)
 229   3              twdDelay(10); 
 230   3              sigstate.DeteSignalType1 = temp;
 231   3            sigstate.DeteSignalTimes++;
 232   3        
 233   3            if(sigstate.DeteSignalTimes>12 )
 234   3            {
 235   4              sigstate.DeteSignalType = temp;
 236   4                    sigstate.DeteSignalTimes=0;
 237   4      #if 1
 238   4              if(sigstate.DeteSignalType!=sigstate.SigStd)
C51 COMPILER V7.50   VIDEODETECT                                                           06/16/2017 08:24:41 PAGE 5   

 239   4              {
 240   5              DBG_PRINT ("\r State.DeteSignalType = 0x%bx\n", sigstate.DeteSignalType);
 241   5              DBG_PRINT ("\r OK State.DeteSignalTimes = 0x%bx\n", sigstate.DeteSignalTimes);
 242   5              }
 243   4      #endif
 244   4            } 
 245   3            }
 246   2          else
 247   2          {
 248   3              sigstate.DeteSignalTimes=0;
 249   3          }
 250   2          
 251   2            if(sigstate.DeteSignalType != sigstate.SigStd)
 252   2            {
 253   3                #if 0
                        temp_status = IC_ReadByte(TWIC_P0, 0x50);
                    DBG_PRINT ("\r P0_50 = 0x%bx\n", temp_status);
                        temp_status = IC_ReadByte(TWIC_P2, 0x41);
                    DBG_PRINT ("\r P2_41 = 0x%bx\n", temp_status);
                    temp_status = IC_ReadByte(TWIC_P0, 0x5A);
                    DBG_PRINT ("\r P0_5A = 0x%bx\n", temp_status);
                        temp_status = IC_ReadByte(TWIC_P0, 0x5B);
                    DBG_PRINT ("\r P0_5B = 0x%bx\n", temp_status);
                    #endif
 263   3        
 264   3            if(!(IC_ReadByte(TWIC_P0,0x91)&0x80))
 265   3                {
 266   4                /*black screen*/
 267   4              ClosePanel(BLACK_BACKGROUND);
 268   4              //DBG_PRINT("\r standard change close panel BLACK 3!!!\n\r");
 269   4            }
 270   3            }
 271   2      #else
                  regTEMP = IC_ReadByte(TWIC_P2,0x41)&0x07;
              
                  switch(regTEMP)
                    {
                    case 0x00:
                           temp =NTSC_M;
                         break;
                         
                    case 0x01:
                         temp =PAL_B;
                         break;
                
                    case 0x02:
                         temp =PAL_M;
                         break;
                
                    case 0x03:
                         temp =PAL_N;
                         break;
                
                    case 0x04:
                         temp =SECAM;
                         break;
              
                    case 0x05:
                         temp =NTSC_443;
                         break;
                         
                    default: 
C51 COMPILER V7.50   VIDEODETECT                                                           06/16/2017 08:24:41 PAGE 6   

                        temp =sigLoss;
                        break;
                  } 
                  
                  /*check standard stable*/
                    if((sigstate.DeteSignalTimes ==0) || (sigstate.DeteSignalType1 == temp))
                    {   
                      if (temp == PAL_B)
                      twdDelay(100);  
                      sigstate.DeteSignalType1 = temp;
                    sigstate.DeteSignalTimes++;
                    twdDelay(100);
                    if(sigstate.DeteSignalTimes>12 )
                    {
                      sigstate.DeteSignalType = temp;
                            sigstate.DeteSignalTimes=0;
              #if 1
                      if(sigstate.DeteSignalType!=sigstate.SigStd)
                      {
                      DBG_PRINT ("\r State.DeteSignalType = 0x%bx\n", sigstate.DeteSignalType);
                      DBG_PRINT ("\r OK State.DeteSignalTimes = 0x%bx\n", sigstate.DeteSignalTimes);
                      }
              #endif
                    } 
                    }
                  else
                  {
                      sigstate.DeteSignalTimes=0;
                  }
                  
                        
              #endif //ManySignalSystemMode
 333   2          if(temp != sigstate.SigStd)
 334   2              {
 335   3                #if 0
                        temp_status = IC_ReadByte(TWIC_P0, 0x50);
                        DBG_PRINT ("\r P0_50 = 0x%bx\n", temp_status);
                        temp_status = IC_ReadByte(TWIC_P2, 0x41);
                        DBG_PRINT ("\r P2_41 = 0x%bx\n", temp_status);
                        temp_status = IC_ReadByte(TWIC_P0, 0x5A);
                        DBG_PRINT ("\r P0_5A = 0x%bx\n", temp_status);
                        temp_status = IC_ReadByte(TWIC_P0, 0x5B);
                        DBG_PRINT ("\r P0_5B = 0x%bx\n", temp_status);
                    #endif
 345   3            
 346   3                if(!(IC_ReadByte(TWIC_P0,0x91)&0x80))
 347   3                {
 348   4                  /*black screen*/
 349   4                  ClosePanel(BLACK_BACKGROUND);
 350   4                  //DBG_PRINT("\r standard change close panel BLACK 3!!!\n\r");
 351   4                }
 352   3              }
 353   2      
 354   2          return;
 355   2        } 
 356   1      
 357   1        else if (sigstate.SigSrc == Src_YUV)
 358   1        {
 359   2          temp=IC_ReadByte(TWIC_P6,0x12)&0x0F;
 360   2          IC_WritByte(TWIC_P6,0x12,0x3F);
 361   2          /* NO SINGAL */
 362   2          if( (temp&0x03)==0x03 ||  (temp&0x22)==0x02 )
C51 COMPILER V7.50   VIDEODETECT                                                           06/16/2017 08:24:41 PAGE 7   

 363   2            {
 364   3                if(sigstate.SigActive != Signal_Lost)
 365   3                {
 366   4                    /*Close Panel*/ 
 367   4              if(!(IC_ReadByte(TWIC_P0,0x91)&0x80)||(IC_ReadByte(TWIC_P0, FRAME_CRED_CFG_REG) == 0x10))
 368   4                  {
 369   5                 sigstate.SigStd=YUV_UNKNOW;
 370   5                  /*blue screen*/
 371   5                ClosePanel(BLACK_BACKGROUND);
 372   5                //DBG_PRINT("\r  close panel BLUE  !!!\n\r");
 373   5                }
 374   4                }
 375   3              sigstate.SigActive = Signal_Lost; 
 376   3            }
 377   2          /* HAVE SINGLE */
 378   2          else
 379   2          {
 380   3            
 381   3                if(sigstate.SigActive == Signal_Set)
 382   3                {
 383   4                    tmpSync = IC_ReadByte(TWIC_P6,0x12)&0x0F;
 384   4                IC_WritByte(TWIC_P6,0x12,0x3F); 
 385   4                tmpSync = tmpSync&0x0C;
 386   4          
 387   4                /*Sync change*/
 388   4                if(tmpSync == 0x0C)
 389   4                {
 390   5                    /*Close Panel*/ 
 391   5                if(!(IC_ReadByte(TWIC_P0,0x91)&0x80))
 392   5                    {
 393   6                    /*black screen*/
 394   6                  ClosePanel(BLACK_BACKGROUND);
 395   6                  //DBG_PRINT("\r temp_freerun close panel BLACK 1!!!\n\r");
 396   6                  }
 397   5                    
 398   5                }
 399   4              else if((tmpSync&0x03)==0x03)
 400   4              {
 401   5                if(sigstate.SigActive != Signal_Lost)
 402   5                    {
 403   6                        /*Close Panel*/ 
 404   6                  if(!(IC_ReadByte(TWIC_P0,0x91)&0x80)||(IC_ReadByte(TWIC_P0, FRAME_CRED_CFG_REG) == 0x10))
 405   6                      {
 406   7                      /*blue screen*/
 407   7                    ClosePanel(BLACK_BACKGROUND);
 408   7                    //DBG_PRINT("\r  close panel BLUE  !!!\n\r");
 409   7                    }
 410   6                     }
 411   5                  sigstate.SigActive = Signal_Lost; 
 412   5              }
 413   4                else
 414   4                {
 415   5                    /*Open Panel*/ 
 416   5                  if((IC_ReadByte(TWIC_P0,0x91)&0x80))
 417   5                    {   
 418   6                        if((sigstate.SigStd!=CVBS_UNKNOW)  && (sigstate.SigStd!=YUV_UNKNOW))
 419   6                        {
 420   7                                OpenPanel();   
 421   7                        }
 422   6                    
 423   6                    }
 424   5                }
C51 COMPILER V7.50   VIDEODETECT                                                           06/16/2017 08:24:41 PAGE 8   

 425   4                }
 426   3          
 427   3              if(sigstate.SigActive == Signal_Lost)
 428   3              {
 429   4      #ifdef YPBPR_COLOR_CALIBRATION            
 430   4              if (YPbPrBalance == 0)
 431   4              {
 432   5                YPbPr_ADC_Auto_offset_reset();
 433   5                YPbPr_ADC_Auto_offset();
 434   5                twdDelay(2000);
 435   5                Pb=IC_ReadByte(TWIC_P0, adc_blue_offset);
 436   5                Pr=IC_ReadByte(TWIC_P0, adc_red_offset);
 437   5                YPbPrBalance=1;
 438   5                sigstate.YUV_CALIBRATION = YPbPrBalance;
 439   5              //  VideoSave();
 440   5              } 
 441   4      #endif
 442   4                  sigstate.SigActive = Signal_Active;
 443   4                /*Close Panel*/
 444   4                if(!(IC_ReadByte(TWIC_P0,0x91)&0x80) || (IC_ReadByte(TWIC_P0,0x9D) == 0x10))
 445   4                    {
 446   5                      /*blue screen*/
 447   5                ClosePanel(BLACK_BACKGROUND);
 448   5                //DBG_PRINT("\r  close panel BLUE  !!!\n\r");
 449   5                }
 450   4                
 451   4              }
 452   3            }
 453   2            
 454   2        }
 455   1      #ifdef VGA_DETECT 
                  else if (sigstate.SigSrc == Src_VGA)
                {
                //DBG_PRINT("\r 1.sigstate.SigActive = 0x%d\n\r",(int)sigstate.SigActive);
                  //twdDelay(500);
                  
                  temp=IC_ReadByte(TWIC_P6,0x12)&0x0F;
                  IC_WritByte(TWIC_P6,0x12,0x3F);
                  /* NO SINGAL */
                  if( (temp&0x03)==0x03 ||  (temp&0x22)==0x02 )
                    {
                      Sync_Mode_Detect();
                        if(sigstate.SigActive != Signal_Lost)
                        {
                            /*Close Panel*/ 
                      if(!(IC_ReadByte(TWIC_P0,0x91)&0x80)||(IC_ReadByte(TWIC_P0, FRAME_CRED_CFG_REG) == 0x10))
                          {
                         sigstate.SigStd=VGA_UNKNOW;
                          /*blue screen*/
                        ClosePanel(BLACK_BACKGROUND);
                        //DBG_PRINT("\r  close panel BLUE  !!!\n\r");
                        }
                        }
                      sigstate.SigActive = Signal_Lost; 
                    }
                  /* HAVE SINGLE */
                  else
                  { 
                        if(sigstate.SigActive == Signal_Set)
                        {
                          //twdDelay(500);
              #if 0       
C51 COMPILER V7.50   VIDEODETECT                                                           06/16/2017 08:24:41 PAGE 9   

                            tmpSync = IC_ReadByte(TWIC_P6,0x12)&0x0F;
                      //DBG_PRINT("\r -->tmpSync = 0x%x\n\r",(int)tmpSync);
                        IC_WritByte(TWIC_P6,0x12,0x3F); 
                        tmpSync = tmpSync&0x0C;
              #endif    
                        /*Sync change*/
                        if((temp && 0x08) || (temp && 0x04))
                        {
                            /*Close Panel*/ 
                        if(!(IC_ReadByte(TWIC_P0,0x91)&0x80))
                            {
                            /*black screen*/
                          ClosePanel(BLACK_BACKGROUND);
                          //DBG_PRINT("\r temp_freerun close panel BLACK 1!!!\n\r");
                          }
                            sigstate.SigActive = Signal_Lost; 
                        }
              #if 0       
                      else if((tmpSync&0x03)==0x03)
                      {
                        if(sigstate.SigActive != Signal_Lost)
                            {
                                /*Close Panel*/ 
                          if(!(IC_ReadByte(TWIC_P0,0x91)&0x80)||(IC_ReadByte(TWIC_P0, FRAME_CRED_CFG_REG) == 0x10))
                              {
                              /*blue screen*/
                            ClosePanel(0x1D, 0xF0, 0x6C);
                            //DBG_PRINT("\r  close panel BLUE  !!!\n\r");
                            }
                             }
                          sigstate.SigActive = Signal_Lost; 
                      }
              #endif
                        else
                        {
                            /*Open Panel*/ 
                          if((IC_ReadByte(TWIC_P0,0x91)&0x80))
                            {   
                                if((sigstate.SigStd!=CVBS_UNKNOW)  && (sigstate.SigStd!=YUV_UNKNOW))
                                {
                                        OpenPanel();   
                                }
                            
                            }
                        }
                        }
                      if(sigstate.SigActive == Signal_Lost)
                      {
                          sigstate.SigActive = Signal_Active;
                      DBG_PRINT("1.SET Signal_Active\n");
                        /*Close Panel*/
                        if(!(IC_ReadByte(TWIC_P0,0x91)&0x80) || (IC_ReadByte(TWIC_P0,0x9D) == 0x10))
                            {
                              /*blue screen*/
                        ClosePanel(BLACK_BACKGROUND);
                        }
                        
                      }
                    }
                    
                }
              #endif
C51 COMPILER V7.50   VIDEODETECT                                                           06/16/2017 08:24:41 PAGE 10  

 549   1      }
 550          /*
 551           * 摘要 :static unsigned char YPbPr_modedetect(unsigned short Hsync_period, unsigned short Vsync_period)  
 552           *
 553           * 描述 :ypbpr讯号匹配
 554           *
 555           * 参数 :unsigned short Hsync_period : hsync total dots
 556           *　   unsigned short Vsync_period : vysnc total lines
 557           *
 558           * 回传值 :无
 559           *
 560           * 注意 : 无
 561          */
 562          static unsigned char YPbPr_modedetect(unsigned short Hsync_period, unsigned short Vsync_period)                     
             -      
 563          {
 564   1          unsigned char ypbprmode=0;
 565   1      
 566   1        if(DataInRage(Hsync_period,0xd688,0x20)&&DataInRage(Vsync_period,0x110,0x10)) 
 567   1          ypbprmode=YUV_480I;
 568   1          else if(DataInRage(Hsync_period,0x6B42,0x20)&&DataInRage(Vsync_period,0x20d,0x10))
 569   1            ypbprmode=YUV_480P;
 570   1        else if(DataInRage(Hsync_period,0xd808,0x20)&&DataInRage(Vsync_period,0x140,0x10))
 571   1          ypbprmode=YUV_576I;
 572   1        else if(DataInRage(Hsync_period,0x6c00,0x20)&&DataInRage(Vsync_period,0x271,0x10))
 573   1          ypbprmode=YUV_576P;
 574   1        else if(DataInRage(Hsync_period,0x5a01,0x20)&&DataInRage(Vsync_period,0x2f3,0x10))
 575   1          ypbprmode=YUV_720P_50;  
 576   1        else if(DataInRage(Hsync_period,0x4b14,0x20)&&DataInRage(Vsync_period,0x2f3,0x10))
 577   1          ypbprmode=YUV_720P_60;
 578   1        else if(DataInRage(Hsync_period,0x7802,0x20)&&DataInRage(Vsync_period,0x241,0x10))
 579   1          ypbprmode=YUV_1080I_50;
 580   1        else if(DataInRage(Hsync_period,0x6418,0x20)&&DataInRage(Vsync_period,0x241,0x10))  
 581   1          ypbprmode=YUV_1080I_60;
 582   1        else
 583   1          ypbprmode= YUV_UNKNOW;
 584   1      
 585   1        return ypbprmode;
 586   1      }
 587          #ifdef VGA_DETECT
              /*
               * 摘要 :static unsigned char VGA_modedetect(unsigned short Hsync_period, unsigned short Vsync_period)  
               *
               * 描述 :vga讯号匹配
               *
               * 参数 :unsigned short Hsync_period : hsync total dots
               *　   unsigned short Vsync_period : vysnc total lines
               *
               * 回传值 :无
               *
               * 注意 : 无
              */
              static unsigned char VGA_modedetect(unsigned short Hsync_period, unsigned short Vsync_period)                         
             -  
              {
                  unsigned char vgamode=0;
                     if(DataInRage(Hsync_period,0x6b3d,0x20)&&DataInRage(Vsync_period,0x20c,0x10))  
                  vgamode=VGA_720_480;
                else if(DataInRage(Hsync_period,0x6bfe,0x20)&&DataInRage(Vsync_period,0x270,0x10))  
                  vgamode=VGA_720_576;
                else if(DataInRage(Hsync_period,0x2908,0x20)&&DataInRage(Vsync_period,0x464,0x10))  
                { vgamode=VGA_1920_1080;
C51 COMPILER V7.50   VIDEODETECT                                                           06/16/2017 08:24:41 PAGE 11  

                  dbg(10, (">>>>> Main Menu page VGA\n\r"));} 
                else
                  vgamode= VGA_UNKNOW;
              
                return vgamode;
              
              }
              #endif
 617          /*
 618           * 摘要 :void SignalProcess() 
 619           *
 620           * 描述 :影像讯号处理程序
 621           *
 622           * 参数 :无
 623           *
 624           * 回传值 :无
 625           *
 626           * 注意 : 无
 627          */
 628          void SignalProcess()
 629          {
 630   1        unsigned short tmpData[2];
 631   1        unsigned char tmpStd=0; 
 632   1        unsigned char temp=0;
 633   1      
 634   1        if(sigstate.SigSrc == Src_NONE)
 635   1          return;
 636   1        //DBG_PRINT ("\rSIGNAL PROCESS\n");
 637   1        if (sigstate.SigSrc == Src_CVD)
 638   1        {
 639   2      
 640   2          if((sigstate.SigStd ==sigstate.DeteSignalType)) 
 641   2          {
 642   3            return; 
 643   3          }
 644   2          sigstate.SigStd =sigstate.DeteSignalType;
 645   2          ASigStd = sigstate.SigStd;
 646   2          //registry_write((unsigned long)&UserData, sizeof(UserData));
 647   2          //VideoSave();
 648   2          if (sigstate.SigStd != sigLoss)
 649   2          {
 650   3            if(sigstate.SigStd != CVBS_UNKNOW)
 651   3            {
 652   4              //std=VIDEODET_CVD_TAB[sigstate.SigStd];
 653   4              WriteRegsTable((unsigned char*)VIDEODET_CVD_TAB[sigstate.SigStd], CQ_TRIGGER_VSYNC);
 654   4              WriteRegsTable((unsigned char*)VIDEODET_CVD_TAB[sigstate.SigStd+6], CQ_TRIGGER_VSYNC);
 655   4              //DBG_PRINT("2.SIGNAL ACT=%bd SRC=%bd STD=%bd type=%bd\r\n",sigstate.SigActive,sigstate.SigSrc,sigstat
             -e.SigStd,sigstate.DeteSignalType);
 656   4              DBG_PRINT("\r\nWrite CVBS TABLE__OK!!!\n\r"); 
 657   4      //        vde_soft_reset();
 658   4      //        OpenPanel();
 659   4      //        twdDelay(3000);
 660   4            }
 661   3          }
 662   2          else
 663   2          {
 664   3          #if 1
 665   3            DBG_PRINT("\rWrite not Signal!!!\n\r"); 
 666   3            if(!(IC_ReadByte(TWIC_P0,0x91)&0x80))
 667   3                {
 668   4               sigstate.SigStd=CVBS_UNKNOW;
 669   4              ClosePanel(BLACK_BACKGROUND);
C51 COMPILER V7.50   VIDEODETECT                                                           06/16/2017 08:24:41 PAGE 12  

 670   4              //DBG_PRINT("\r  close panel BLUE 2 !!!\n\r");
 671   4            }
 672   3          #endif
 673   3          }
 674   2          
 675   2        }
 676   1        
 677   1        else if (sigstate.SigSrc == Src_YUV)
 678   1        {
 679   2          if(sigstate.SigActive == Signal_Active)
 680   2            {
 681   3             /* READ VSYNC PERIOD */
 682   3              tmpData[1] = GetVTotal(0);
 683   3              
 684   3              twdDelay(800);
 685   3              /* READ HSYNC PERIOD */
 686   3              tmpData[0] = IC_ReadByte(TWIC_P0,0x59);
 687   3              tmpData[0] <<=8;
 688   3              tmpData[0] |= IC_ReadByte(TWIC_P0,0x58);
 689   3                      
 690   3              tmpStd=YPbPr_modedetect(tmpData[0], tmpData[1]);
 691   3              DBG_PRINT("YUV Active signal Htotal 0x%x  Vtotal 0x%x std is 0x%bx \n", (unsigned short)tmpData[0], 
             -(unsigned short)tmpData[1], (unsigned char)tmpStd);
 692   3      
 693   3            if( tmpStd != 0)
 694   3              {
 695   4                  if( (sigstate.SigStd != tmpStd) || (sigstate.SigActive != Signal_Set))
 696   4                  {
 697   5                      /*Close Panel*/
 698   5                    if(!(IC_ReadByte(TWIC_P0,0x91)&0x80)) 
 699   5                          {  
 700   6                              /*black screen*/
 701   6                  ClosePanel(BLACK_BACKGROUND);
 702   6                  //DBG_PRINT("\r temp_freerun close panel BLACK 1!!!\n\r");
 703   6                        }
 704   5                  
 705   5                      if(sigstate.SigSrc == Src_YUV)
 706   5                      {
 707   6                          sigstate.SigStd = tmpStd;
 708   6                    if(sigstate.SigStd != YUV_UNKNOW)
 709   6                    {
 710   7                      WriteRegsTable((unsigned char*)VIDEODET_YUV_TAB[sigstate.SigStd], CQ_TRIGGER_VSYNC);
 711   7                    WriteRegsTable((unsigned char*)VIDEODET_YUV_TAB[sigstate.SigStd+8], CQ_TRIGGER_VSYNC);    
 712   7                    DBG_PRINT ("\r YUV load table Active signal std is 0x%bx\n",tmpStd);
 713   7                      sigstate.SigActive = Signal_Set;
 714   7                    DSigStd = sigstate.SigStd;
 715   7                    //registry_write((unsigned long)&UserData, sizeof(UserData));
 716   7                //    VideoSave();
 717   7                    OpenPanel();
 718   7                    twdDelay(3000); 
 719   7                    }
 720   6                  else
 721   6                  {
 722   7                    sigstate.SigActive = Signal_Lost;
 723   7                    ClosePanel(BLACK_BACKGROUND);
 724   7                    return;
 725   7                  }
 726   6                    
 727   6                      }
 728   5                  }
 729   4              }
 730   3            
C51 COMPILER V7.50   VIDEODETECT                                                           06/16/2017 08:24:41 PAGE 13  

 731   3          }
 732   2          else if(sigstate.SigActive == Signal_Set)
 733   2              {
 734   3                temp=IC_ReadByte(TWIC_P6,0x12)&0x0F;
 735   3            IC_WritByte(TWIC_P6,0x12,0x3F);
 736   3            /* SINGAL CHANGE */
 737   3            if( (temp&0x08)==0x08 || (temp&0x04)==0x04)
 738   3              {
 739   4                /*Close Panel*/ 
 740   4              if(!(IC_ReadByte(TWIC_P0,0x91)&0x80)||(IC_ReadByte(TWIC_P0, FRAME_CRED_CFG_REG) == 0x10))
 741   4                  {
 742   5              /*blue screen*/
 743   5                ClosePanel(BLACK_BACKGROUND);
 744   5                //DBG_PRINT("\r  close panel BLUE  !!!\n\r");
 745   5                }
 746   4                sigstate.SigActive = Signal_Lost; 
 747   4              }
 748   3            /* NO SINGAL */
 749   3            if( (temp&0x03)==0x03 ||  (temp&0x22)==0x02 )
 750   3              {
 751   4                  /*Close Panel*/ 
 752   4              if(!(IC_ReadByte(TWIC_P0,0x91)&0x80)||(IC_ReadByte(TWIC_P0, FRAME_CRED_CFG_REG) == 0x10))
 753   4                  {
 754   5                  /*blue screen*/
 755   5                ClosePanel(BLACK_BACKGROUND);
 756   5                //DBG_PRINT("\r  close panel BLUE  !!!\n\r");
 757   5                }
 758   4                sigstate.SigActive = Signal_Lost; 
 759   4              }
 760   3      #if 0
                    //twdDelay(800);
                    /* READ HSYNC PERIOD */
                    tmpData[0] = IC_ReadByte(TWIC_P0,0x59);
                    tmpData[0] <<=8;
                    tmpData[0] |= IC_ReadByte(TWIC_P0,0x58);
                      
                    /* READ VSYNC PERIOD */
                    tmpData[1] =(Signalset_times==5)? GetVTotal(1):GetVTotal(0);
                    tmpStd=YPbPr_modedetect(tmpData[0], tmpData[1]);  
                    if( Signalset_times == 5 )  
                      Signalset_times=0;
                    else
                      Signalset_times++; 
              
                    if(sigstate.SigStd != tmpStd)
                      {
                          sigstate.SigActive = Signal_Active;
                        DBG_PRINT("2. SET Signal_Active\n");
                        /*Close Panel*/ 
                      if(!(IC_ReadByte(TWIC_P0,0x91)&0x80))
                            {
                            /*black screen*/
                          ClosePanel(0x10, 0x80, 0x80);
                          //DBG_PRINT("\r temp_freerun close panel BLACK 1!!!\n\r");
                          }
                      }                 
              #endif
 788   3          }
 789   2        }
 790   1      #ifdef VGA_DETECT 
                else if (sigstate.SigSrc == Src_VGA)
                  {
C51 COMPILER V7.50   VIDEODETECT                                                           06/16/2017 08:24:41 PAGE 14  

                    //DBG_PRINT("\r sigstate.SigActive = 0x%d\n\r",(int)sigstate.SigActive);
                  if(sigstate.SigActive == Signal_Active)
                    {        
              #ifdef AUTO_CAL_OUT_TIMING
                    if (SrcVGAProcess(&tmpStd, 0))
                    {
                      sigstate.SigActive = Signal_Set;
                      sigstate.SigStd = tmpStd;
                      OpenPanel();
                    }
              #else
                    /* READ VSYNC PERIOD */
                     tmpData[1] = GetVTotal(0);
                           
                     twdDelay(800);
                     /* READ HSYNC PERIOD */
                     tmpData[0] = IC_ReadByte(TWIC_P0,0x59);
                     tmpData[0] <<=8;
                     tmpData[0] |= IC_ReadByte(TWIC_P0,0x58);
              
                    tmpStd=VGA_modedetect(tmpData[0], tmpData[1]);
                    /* */     
                    if( tmpStd != 0)
                      {
                          if( (sigstate.SigStd != tmpStd) || (sigstate.SigActive != Signal_Set))
                          {
                              /*Close Panel*/
                            if(!(IC_ReadByte(TWIC_P0,0x91)&0x80)) 
                                  {  
                                     
                      ClosePanel(BLACK_BACKGROUND);
                        //DBG_PRINT("\r  close panel BLUE  !!!\n\r");
                      //DBG_PRINT("\r temp_freerun close panel BLACK 1!!!\n\r");
                                } 
                            if(sigstate.SigSrc == Src_VGA)
                              {
                                  sigstate.SigStd = tmpStd;
                            if(sigstate.SigStd != VGA_UNKNOW)
                            {
                            //ClosePanel(0x10, 0x80, 0x80);
                            //ClosePanel(0x1d, 0xf0, 0x80);
                                 WriteRegsTable((unsigned char*)VIDEODET_VGA_TAB[sigstate.SigStd], CQ_TRIGGER_VSYNC);
                            WriteRegsTable((unsigned char*)VIDEODET_VGA_TAB[sigstate.SigStd+3], CQ_TRIGGER_VSYNC);    
                            DBG_PRINT ("\r VGA load table Active signal std is 0x%bx\n",tmpStd);
                                    sigstate.SigActive = Signal_Set;
                            VSigStd = sigstate.SigStd;
                            #if 0
                            RGBAutoADCGainOffset();
                            #endif 
                            //registry_write((unsigned long)&UserData, sizeof(UserData));
                            //VideoSave();
                                                              twdDelay(50);
                                                             OpenPanel();
                            DBG_PRINT("\r Write_VGATable !!!\n\r");
                             //  twdDelay(50);
                            
                            
                            }
                          else
                          {
                            sigstate.SigActive = Signal_Lost;
                            ClosePanel(BLACK_BACKGROUND);
C51 COMPILER V7.50   VIDEODETECT                                                           06/16/2017 08:24:41 PAGE 15  

                            return;
                          }         
                              }
                          }
                      } 
              #endif
                   }
                  else if(sigstate.SigActive == Signal_Set)
                      {
                        temp=IC_ReadByte(TWIC_P6,0x12)&0x0F;
                    IC_WritByte(TWIC_P6,0x12,0x3F);
                    /* SINGAL CHANGE */
                    if( (temp&0x08)==0x08 || (temp&0x04)==0x04)
                      {
                        /*Close Panel*/ 
                      if(!(IC_ReadByte(TWIC_P0,0x91)&0x80)||(IC_ReadByte(TWIC_P0, FRAME_CRED_CFG_REG) == 0x10))
                          {
                        /*blue screen*/
                        ClosePanel(BLACK_BACKGROUND);
                        //DBG_PRINT("\r  close panel BLUE  !!!\n\r");
                        }
                        sigstate.SigActive = Signal_Lost; 
                      }
                    /* NO SINGAL */
                    if( (temp&0x03)==0x03 ||  (temp&0x22)==0x02 )
                      {
                        /*Close Panel*/ 
                      if(!(IC_ReadByte(TWIC_P0,0x91)&0x80)||(IC_ReadByte(TWIC_P0, FRAME_CRED_CFG_REG) == 0x10))
                          {
                          /*blue screen*/
                        ClosePanel(BLACK_BACKGROUND);
                        //DBG_PRINT("\r  close panel BLUE  !!!\n\r");
                        }
                        sigstate.SigActive = Signal_Lost; 
                      } 
              #ifndef AUTO_CAL_OUT_TIMING
                    //twdDelay(800);
                    /* READ HSYNC PERIOD */
                    tmpData[0] = IC_ReadByte(TWIC_P0,0x59);
                    tmpData[0] <<=8;
                    tmpData[0] |= IC_ReadByte(TWIC_P0,0x58);
                      
                    /* READ VSYNC PERIOD */
                    tmpData[1] =(Signalset_times==5)? GetVTotal(1):GetVTotal(0);
                    tmpStd=VGA_modedetect(tmpData[0], tmpData[1]);  
              
                    
                    if( Signalset_times == 5 )  
                      Signalset_times=0;
                    else
                      Signalset_times++; 
                    if(sigstate.SigStd != tmpStd)
                      {
                          sigstate.SigActive = Signal_Active;
                        /*Close Panel*/ 
                      if(!(IC_ReadByte(TWIC_P0,0x91)&0x80))
                            {
                            /*black screen*/
                          ClosePanel(BLACK_BACKGROUND);
                          }
                      }
              #endif
C51 COMPILER V7.50   VIDEODETECT                                                           06/16/2017 08:24:41 PAGE 16  

                  } 
                } 
              #endif  
 920   1      } 
 921          
 922          /*
 923           * 摘要 :void SignalProcess() 
 924           *
 925           * 描述 :影像讯号处理自动侦测
 926           *
 927           * 参数 :无
 928           *
 929           * 回传值 :无
 930           *
 931           * 注意 : 无
 932          */
 933          void SingalDetect(void)
 934          { 
 935   1        if(AUTO_DETECT)
 936   1        {
 937   2              GainSignal();
 938   2              SignalProcess();
 939   2        }
 940   1      }
 941          /*
 942           * 摘要 :void InitStateVal(void)
 943           *
 944           * 描述 :初始化sigstate　structure
 945           *
 946           * 参数 :无
 947           *
 948           * 回传值 :无
 949           *
 950           * 注意 : 无
 951          */
 952          void InitStateVal(void)
 953          {
 954   1        sigstate.SigActive = Signal_Lost; 
 955   1        sigstate.DeteSignalType =CVBS_UNKNOW;
 956   1        sigstate.DeteSignalType1 =CVBS_UNKNOW;
 957   1          sigstate.DeteSignalTimes =0;
 958   1        sigstate.YUV_CALIBRATION =0;
 959   1        
 960   1        sigstate.VGA_CALIBRATION =0;
 961   1        sigstate.VGA_CALIBRATION_Gain_R=0x80;
 962   1        sigstate.VGA_CALIBRATION_Gain_G=0x80;
 963   1        sigstate.VGA_CALIBRATION_Gain_B=0x80;
 964   1        sigstate.VGA_CALIBRATION_Offset_R=0x80;
 965   1        sigstate.VGA_CALIBRATION_Offset_G=0x80;
 966   1        sigstate.VGA_CALIBRATION_Offset_B=0x80;
 967   1      }
 968          /*
 969           * 摘要 :void YUVInit(void)
 970           *
 971           * 描述 :YUV初始化
 972           *
 973           * 参数 :无
 974           *
 975           * 回传值 :无
 976           *
 977           * 注意 : 无
 978          */
C51 COMPILER V7.50   VIDEODETECT                                                           06/16/2017 08:24:41 PAGE 17  

 979          void YUVInit(void)
 980          {
 981   1        dbg(0, ("DSigStd = 0x%bx\n\r",DSigStd));
 982   1        dbg(0, ("ASigStd = 0x%bx\n\r",ASigStd));
 983   1        sigstate.SigSrc = Src_YUV;
 984   1        sigstate.SigStd=DSigStd;
 985   1        
 986   1        WriteRegsTable((unsigned char*)VIDEODET_YUV_TAB[0], CQ_TRIGGER_VSYNC);
 987   1        if ((sigstate.YUV_CALIBRATION == 0) && (YPbPrBalance == 1))
 988   1        {
 989   2          IC_WritByte(TWIC_P0, adc_blue_offset,Pb);
 990   2          IC_WritByte(TWIC_P0, adc_red_offset,Pr);
 991   2          sigstate.YUV_CALIBRATION = 1;
 992   2        }
 993   1        if(sigstate.SigStd != YUV_UNKNOW)
 994   1        {
 995   2          WriteRegsTable((unsigned char*)VIDEODET_YUV_TAB[sigstate.SigStd], CQ_TRIGGER_VSYNC);
 996   2          WriteRegsTable((unsigned char*)VIDEODET_YUV_TAB[sigstate.SigStd+8], CQ_TRIGGER_VSYNC);  
 997   2          sigstate.SigActive = Signal_Set;
 998   2          //OpenPanel();
 999   2          twdDelay(3000); 
1000   2        }
1001   1        else
1002   1        {
1003   2          if((IC_ReadByte(TWIC_P0,0x91)&0x80) )
1004   2          {
1005   3            /*blue screen*/
1006   3            ClosePanel(BLACK_BACKGROUND);
1007   3            //DBG_PRINT("\r  close panel BLUE  !!!\n\r");
1008   3          }
1009   2        }
1010   1        IC_WritByte(TWIC_P0,0x3a,0x03);
1011   1        IC_WritByte(TWIC_P0,0x3b,0x03);         
1012   1        IC_WritByte(TWIC_P6,0x12,0x3F); 
1013   1      
1014   1      }
1015          
1016          /*
1017           * 摘要 :void  VGA_Auto_xiaozhen_init(void)
1018           *
1019           * 描述 :VGA AUTO初始化
1020           *
1021           * 参数 :无
1022           *
1023           * 回传值 :无
1024           *
1025           * 注意 : 无
1026          */
1027          
1028          void  VGA_Auto_xiaozhen_init(void)
1029          {
1030   1           
1031   1          IC_WritByte(TWIC_P0, 0x07, sigstate.VGA_CALIBRATION_Gain_R);
1032   1        IC_WritByte(TWIC_P0, 0x08, sigstate.VGA_CALIBRATION_Gain_G);
1033   1        IC_WritByte(TWIC_P0, 0x09, sigstate.VGA_CALIBRATION_Gain_B);
1034   1        IC_WritByte(TWIC_P0, 0x0a, sigstate.VGA_CALIBRATION_Offset_R);
1035   1        IC_WritByte(TWIC_P0, 0x0b, sigstate.VGA_CALIBRATION_Offset_G);
1036   1        IC_WritByte(TWIC_P0, 0x0c, sigstate.VGA_CALIBRATION_Offset_B);
1037   1        
1038   1      }
1039          /*
1040           * 摘要 :void VGAInit(void)
C51 COMPILER V7.50   VIDEODETECT                                                           06/16/2017 08:24:41 PAGE 18  

1041           *
1042           * 描述 :VGA 初始化
1043           *
1044           * 参数 :无
1045           *
1046           * 回传值 :无
1047           *
1048           * 注意 : 无
1049          */
1050          
1051          void VGAInit(void)
1052          {
1053   1        dbg(0, ("DSigStd = 0x%bx\n\r",DSigStd));
1054   1        dbg(0, ("ASigStd = 0x%bx\n\r",ASigStd));
1055   1        sigstate.SigSrc = Src_VGA;
1056   1        sigstate.SigStd=VSigStd;//DSigStd;// 1
1057   1        //sigstate.SigActive = Signal_Set;
1058   1      
1059   1      
1060   1             /*VGA ×O?ˉD￡Oy?COa*/
1061   1      #if 0
                   if (sigstate.VGA_CALIBRATION ==0)
                      {
                            VGA_Auto_xiaozhen_init();
                  DBG_PRINT("\r  VGAinit_CALIBATION!\n\r");  
                      
                      }
              #endif  
1069   1         
1070   1      
1071   1        
1072   1        
1073   1        #if 1 
1074   1      
1075   1        WriteRegsTable((unsigned char*)VIDEODET_VGA_TAB[0], CQ_TRIGGER_VSYNC);
1076   1        //if ((sigstate.DeteSignalType !=sigLoss) || (sigstate.SigStd !=VGA_UNKNOW))
1077   1        if(sigstate.SigStd != VGA_UNKNOW)
1078   1        {
1079   2          //WriteRegsTable((unsigned char*)VIDEODET_VGA_TAB[sigstate.SigStd], CQ_TRIGGER_VSYNC);
1080   2          WriteRegsTable((unsigned char*)VIDEODET_VGA_TAB[sigstate.SigStd], CQ_TRIGGER_VSYNC);
1081   2          WriteRegsTable((unsigned char*)VIDEODET_VGA_TAB[sigstate.SigStd+1], CQ_TRIGGER_VSYNC);  
1082   2          sigstate.SigActive = Signal_Set;
1083   2        
1084   2          twdDelay(100);  //3000
1085   2             DBG_PRINT("\r  sigstate.SigStd != VGA_UNKNOW  !!!\n\r");
1086   2        }
1087   1        else
1088   1        {
1089   2          if((IC_ReadByte(TWIC_P0,0x91)&0x80) )
1090   2          {
1091   3            /*blue screen*/
1092   3            //ClosePanel(0x1D, 0xF0, 0x6C); 
1093   3              //ClosePanel(0x10, 0x80, 0x80);
1094   3                sigstate.SigActive = Signal_Set;
1095   3            DBG_PRINT("\r  VGAinit_close panel BLack  !!!\n\r");
1096   3          }
1097   2        }
1098   1        #endif
1099   1        IC_WritByte(TWIC_P0,0x3a,0x03);
1100   1        IC_WritByte(TWIC_P0,0x3b,0x03);
1101   1        IC_WritByte(TWIC_P6,0x12,0x3F); 
1102   1        //Sync_Mode_Detect();
C51 COMPILER V7.50   VIDEODETECT                                                           06/16/2017 08:24:41 PAGE 19  

1103   1      } 
1104          /*
1105           * 摘要 :void CVDInit(void)
1106           *
1107           * 描述 :CVD 初始化
1108           *
1109           * 参数 :无
1110           *
1111           * 回传值 :无
1112           *
1113           * 注意 : 无
1114          */
1115          void CVDInit(void)
1116          {
1117   1        sigstate.SigSrc = Src_CVD;
1118   1        sigstate.SigStd=ASigStd;
1119   1        dbg(2, ("data=%x %x\n",VIDEODET_CVD_TAB[0],VIDEODET_CVD_TAB[1]));
1120   1        DBG_PRINT("VIDEODET_CVD_TAB[0] = %bd,VIDEODET_CVD_TAB[1]= %bd \n\r", VIDEODET_CVD_TAB[0],VIDEODET_CVD_TAB
             -[1]);
1121   1        WriteRegsTable((unsigned char*)VIDEODET_CVD_TAB[0], CQ_TRIGGER_VSYNC);
1122   1        twdDelay(300);  
1123   1        
1124   1      #ifdef  TwoSignalSystemMode       
1125   1        if (sigstate.SigStd == CVBS_UNKNOW)
1126   1          sigstate.SigStd = PAL_B;
1127   1      #endif
1128   1        if ((sigstate.DeteSignalType !=sigLoss) || (sigstate.SigStd !=CVBS_UNKNOW))
1129   1        {
1130   2          WriteRegsTable((unsigned char*)VIDEODET_CVD_TAB[sigstate.SigStd], CQ_TRIGGER_VSYNC);
1131   2          WriteRegsTable((unsigned char*)VIDEODET_CVD_TAB[sigstate.SigStd+6], CQ_TRIGGER_VSYNC);      
1132   2          twdDelay(3000);
1133   2          DBG_PRINT("\r  aaaaaaaaaaaa  !!!\n\r");
1134   2        } 
1135   1        else
1136   1        {
1137   2          DBG_PRINT("\r  bbbbbbbbbbbb  !!!\n\r");
1138   2          if((IC_ReadByte(TWIC_P0,0x91)&0x80) )
1139   2          {
1140   3            /*blue screen*/
1141   3            ClosePanel(BLACK_BACKGROUND);
1142   3            DBG_PRINT("\r  close panel BLUE  !!!\n\r");
1143   3            
1144   3          }
1145   2          WriteRegsTable((unsigned char*)VIDEODET_CVD_TAB[sigstate.SigStd], CQ_TRIGGER_VSYNC);
1146   2          WriteRegsTable((unsigned char*)VIDEODET_CVD_TAB[sigstate.SigStd+6], CQ_TRIGGER_VSYNC);      
1147   2          twdDelay(3000);
1148   2        }
1149   1      
1150   1      }
1151          
1152          /*
1153           * 摘要 :void VIPInit(unsigned char std)
1154           *
1155           * 描述 :数字信号初始化
1156           *
1157           * 参数 :无
1158           *
1159           * 回传值 :无
1160           *
1161           * 注意 : 无
1162          */
1163          void VIPInit(unsigned char std)
C51 COMPILER V7.50   VIDEODETECT                                                           06/16/2017 08:24:41 PAGE 20  

1164          {
1165   1        sigstate.SigSrc = Src_VIP;//数字信号
1166   1        sigstate.SigStd = std;//默认为ccir656
1167   1        ClosePanel(BACKGROUND);
1168   1        IC_WritByte(TWIC_P0, 0xC2, 0x12);
1169   1        IC_WritByte(TWIC_P1, 0x3A, 0x00);
1170   1        WriteRegsTable((unsigned char*)VIDEODET_VIP_TAB[0], CQ_TRIGGER_SW);
1171   1        if(sigstate.SigStd != VIP_UNKNOWN)
1172   1        {
1173   2          WriteRegsTable((unsigned char*)VIDEODET_VIP_TAB[sigstate.SigStd], CQ_TRIGGER_SW);
1174   2          WriteRegsTable((unsigned char*)VIDEODET_VIP_TAB[sigstate.SigStd+6], CQ_TRIGGER_SW);   
1175   2          
1176   2          sigstate.SigActive = Signal_Active;
1177   2          //OpenPanel();
1178   2          //twdDelay(2000); 
1179   2        }
1180   1        else
1181   1        {
1182   2          if((IC_ReadByte(TWIC_P0,0x91)&0x80) )
1183   2          {
1184   3            /*blue screen*/
1185   3            ClosePanel(BACKGROUND);
1186   3            //DBG_PRINT("\r  close panel BLUE  !!!\n\r");
1187   3          }
1188   2        }
1189   1        //if(nvp6124_difinition == NVP6124_VI_1080P_2530)
1190   1          //WriteRegsTable(ccir656_1080p_patch, CQ_TRIGGER_SW);
1191   1        //IC_WritByte(TWIC_P1,0x3B,0x44);
1192   1        IC_WritByte(TWIC_P0,0x3a,0x03);
1193   1        IC_WritByte(TWIC_P0,0x3b,0x03);         
1194   1        IC_WritByte(TWIC_P6,0x12,0x3F);   
1195   1          IC_WritByte(TWIC_P0, 0xC2, 0x00);
1196   1        OpenPanel();
1197   1        auto_detection_ctrl(DISABLE);
1198   1      }
1199          
1200          /* auto detection init */
1201          /*
1202           * 摘要 :void auto_detection_init(unsigned short code *IML_CVBS_TAB,unsigned short code *IML_YUV_TAB,unsig
             -ned short code *IML_VGA_TAB)
1203           *
1204           * 描述 :AUTO DETECTION 初始化,并载入预设的TABLE
1205           *
1206           * 参数 :unsigned short code *IML_CVBS_TAB  =>cvbs预设tablre
1207           *       unsigned short code *IML_YUV_TAB   =>yuv预设table
1208           *       unsigned short code *IML_VGA_TAB   =>vga预设table
1209           *
1210           * 回传值 :无
1211           *
1212           * 注意 : 无
1213          */
1214          #if 1
1215          void auto_detection_init(unsigned short code *IML_CVBS_TAB,unsigned short code *IML_YUV_TAB,unsigned short
             - code *IML_VGA_TAB)
1216          {
1217   1        unsigned char i=0;
1218   1        VIDEODET_YUV_TAB= IML_YUV_TAB;
1219   1        VIDEODET_CVD_TAB= IML_CVBS_TAB;
1220   1        VIDEODET_VGA_TAB= IML_VGA_TAB;
1221   1        VIDEODET_VIP_TAB=&IML0_VIP_TAB;//数字信号输入
1222   1        dbg(2, ("YUV=%d CVD=%d\n VGA=%d\n",(int)sizeof(IML_YUV_TAB[0]),(int)sizeof(IML_CVBS_TAB[0]),(int)sizeof(I
             -ML_VGA_TAB[0])));
C51 COMPILER V7.50   VIDEODETECT                                                           06/16/2017 08:24:41 PAGE 21  

1223   1      }
1224          #endif
1225          /*
1226           * 摘要 :void auto_detection_ctrl(unsigned char en)
1227           *
1228           * 描述 :是否允许AUTO DETECTION
1229           *
1230           * 参数 :unsigned char en　=> 1= 使能　0=关闭
1231           *
1232           * 回传值 :无
1233           *
1234           * 注意 : 无
1235          */
1236          void auto_detection_ctrl(unsigned char en)
1237          {
1238   1        if (en)
1239   1        {
1240   2          AUTO_DETECT=1;
1241   2        }
1242   1        else
1243   1        {
1244   2          AUTO_DETECT=0;
1245   2          sigstate.SigSrc = Src_NONE;
1246   2        }
1247   1      }
1248          /*
1249           * 摘要 :bit YPbPr_ADC_Auto_offset(void)
1250           *
1251           * 描述 :YPBPR ADC AUTO OFFSET 自动校正ADC
1252           *
1253           * 参数 :无
1254           *
1255           * 回传值 :　1=完成　0=失败
1256           *
1257           * 注意 : 无
1258          */
1259          #ifdef YPBPR_COLOR_CALIBRATION
1260          bit YPbPr_ADC_Auto_offset(void)
1261          {
1262   1        bit rc=0;
1263   1        IC_WritByte(TWIC_P0, adc_red_offset, 0x60);//adc red offset
1264   1        IC_WritByte(TWIC_P0, adc_blue_offset, 0X60);//adc blue offset
1265   1        
1266   1        IC_WritByte(TWIC_P0,boundary_control,IC_ReadByte(TWIC_P0,boundary_control)|0X80);//boundary detect enable
1267   1        
1268   1        IC_WritByte(TWIC_P1, color_range_probe, 0XE1);//check range enable
1269   1        IC_WritByte(TWIC_P1, color_probe_x_low, 0X0D);//probe x low byte 
1270   1        IC_WritByte(TWIC_P1, color_porbe_x_high, 0X00);//probe x high byte
1271   1        
1272   1        IC_WritByte(TWIC_P1, color_probe_y_low, 0X78);//probe y low byte
1273   1        IC_WritByte(TWIC_P1, color_porbe_y_high, 0X00);//probe y high byte
1274   1      
1275   1        IC_WritByte(TWIC_P1, color_probe_pixel_count, 0X10);//probe pixel count number
1276   1      
1277   1        IC_WritByte(TWIC_P3, auto_offset_low_boundary,  0X60);//setting low boundary
1278   1        IC_WritByte(TWIC_P3, auto_offset_high_boundary, 0XFF);//setting high boundary
1279   1        IC_WritByte(TWIC_P3, auto_offset_threshold, 0X10);//setting threshold
1280   1        
1281   1        IC_WritByte(TWIC_P3, auto_offset_setting, 0X08);//polarity setting
1282   1        IC_WritByte(TWIC_P3, auto_offset_setting, 0X09);//enable auto offset
1283   1        if(IC_ReadByte(TWIC_P3,auto_offset_setting)&0x80)//check the status
1284   1          rc=1;//done
C51 COMPILER V7.50   VIDEODETECT                                                           06/16/2017 08:24:41 PAGE 22  

1285   1        else
1286   1          rc=0;//fail
1287   1        return rc;
1288   1      }
1289          /*
1290           * 摘要 :bit YPbPr_ADC_Auto_offset(void)
1291           *
1292           * 描述 :YPBPR ADC AUTO RESET 自动校正ADC重置
1293           *
1294           * 参数 :无
1295           *
1296           * 回传值 :无
1297           *
1298           * 注意 : 无
1299          */
1300          void YPbPr_ADC_Auto_offset_reset(void)
1301          {
1302   1        if(IC_ReadByte(TWIC_P3,auto_offset_setting)&0x80);//check status if done 
1303   1        {
1304   2          IC_WritByte(TWIC_P3,auto_offset_setting,IC_ReadByte(TWIC_P3,auto_offset_setting)&~0x01);//first clear bi
             -t 1
1305   2          IC_WritByte(TWIC_P3,auto_offset_setting,0X82);//second setting reset bit enable
1306   2          IC_WritByte(TWIC_P3,auto_offset_setting,0X00);//second clear reset bit
1307   2        }
1308   1      }
1309          #endif
1310          
1311          #if 0
              void VideoSet(unsigned char _vASigStd,unsigned char _vDSigStd,unsigned char _Pb,unsigned char _Pr,unsigned
             - char _YPbPrBalance)
              {
                ASigStd = _vASigStd;
                DSigStd = _vDSigStd;
                VSigStd = _vVSigStd;
                Pb = _Pb;
                Pr = _Pr;
                YPbPrBalance = _YPbPrBalance;
              }
              #else
1322          /*
1323           * 摘要 :void VideoSet(unsigned char _vVSigStd,unsigned char _vASigStd,unsigned char _vDSigStd,unsigned ch
             -ar _Pb,unsigned char _Pr,unsigned char _YPbPrBalance)
1324           *
1325           * 描述 :影像参数设置
1326           *
1327           * 参数 :unsigned char _vVSigStd　  =>VGA讯号源　如640X480
1328              unsigned char _vASigStd     =>CVBS讯号源　如NTSC PAL
1329              unsigned char _vDSigStd     =>YPBPR序号源　如480P
1330              unsigned char _Pb           =>adc_blue_offset
1331              unsigned char _Pr           =>adc_red_offset
1332              unsigned char _YPbPrBalance =>YPbPrBalance 是否AUTO OFFSET设定完毕　0:尚未　1:以校正
1333           *
1334           * 回传值 :无
1335           *
1336           * 注意 : 无
1337          */
1338          void VideoSet(unsigned char _vVSigStd,unsigned char _vASigStd,unsigned char _vDSigStd,unsigned char _Pb,un
             -signed char _Pr,unsigned char _YPbPrBalance)
1339          {
1340   1        ASigStd = _vASigStd;
1341   1        DSigStd = _vDSigStd;
1342   1        VSigStd = _vVSigStd;
C51 COMPILER V7.50   VIDEODETECT                                                           06/16/2017 08:24:41 PAGE 23  

1343   1        Pb = _Pb;
1344   1        Pr = _Pr;
1345   1        YPbPrBalance = _YPbPrBalance;
1346   1      }
1347          #endif
1348          #if 0
              void VideoSave(void)
              { 
                RUserData VideoData;
                
                VideoData.vASigStd=ASigStd;
                VideoData.vDSigStd=DSigStd;
                VideoData.Pb=Pb;
                VideoData.Pr=Pr;
                VideoData.YPbPrBalance=YPbPrBalance;//finish tag
                //registry_write((unsigned long)&VideoData, sizeof(VideoData));
              }
              #endif
1361          /*
1362           * 摘要 :void vde_soft_reset()
1363           *
1364           * 描述 :VDE SOFTWARE RESRT VDE重置
1365           *
1366           * 参数 :无
1367           *
1368           * 回传值 :无
1369           *
1370           * 注意 : 无
1371          */
1372          void vde_soft_reset()
1373          {
1374   1        IC_WritByte(TWIC_P2,0X3F,0X01);
1375   1        twdDelay(200);
1376   1        IC_WritByte(TWIC_P2,0X3F,0X00);
1377   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   4243    ----
   CONSTANT SIZE    =    535    ----
   XDATA SIZE       =     32      44
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
